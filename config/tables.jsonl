{"table_name": "event_store", "description": "Stores detailed information about transactional events including lifecycle ID, payment details, and customer information. Can be joined with other tables using 'lifecycle_id'. This table will majorly gives all the necessary information required.", "example_queries": ["List all events with their lifecycle IDs", "Find events that occurred in the last month", "Count the number of events with a specific lifecycle ID", "Show events that were updated in the last week", "SELECT lifecycle_id,  event_type,  sender_transaction_amount,  sender_transaction_currency FROM event_store WHERE sender_transaction_amount > 1000 ORDER BY sender_transaction_amount DESC", "SELECT outcome_decision, COUNT(*) as decision_count FROM event_store GROUP BY outcome_decision ORDER BY decision_count DESC;", "SELECT e.lifecycle_id,  e.event_type,  e.customer_id,  e.sender_transaction_amount,  e.sender_transaction_currency,  e.outcome_decision,  TIMESTAMP_MILLIS(e.created_at) as created_time,  d.start_timestamp,  d.end_timestamp,  s.state.id as current_state,  s.username as updated_by,  q.queueId as current_queue,  u.username as assigned_to FROM event_store e LEFT JOIN cm_driver_master d ON e.lifecycle_id = d.lifecycle_id LEFT JOIN cm_event_state_updates s ON e.lifecycle_id = s.ids[OFFSET(0)].identifier LEFT JOIN  cm_event_queue_changed q ON e.lifecycle_id = q.ids[OFFSET(0)].identifier LEFT JOIN  cm_event_assignee_update u ON e.lifecycle_id = u.ids[OFFSET(0)].identifier WHERE e.outcome_decision = 'REVIEW'"]}
{"table_name": "cm_event_assignee_update", "description": "Records updates to event assignees including user IDs, timestamps, and lifecycle IDs. Can be joined with other tables using columnn 'ids.identifier'.", "example_queries": ["List all assignee updates with their lifecycle IDs", "Find assignee updates that occurred in the last month", "Count the number of assignee updates with a specific lifecycle ID", "Show assignee updates that were updated in the last week", "select count(distinct a.userId) as user_count from cm_event_assignee_update a, \nunnest(a.ids) z \njoin event_store on z.identifier = event_store.lifecycle_id where timestamp_millis(event_store.customer_email_last_update_at) > = TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY) ", "SELECT username, COUNT(*) as assignment_count FROM cm_event_assignee_update GROUP BY username ORDER BY assignment_count DESC", "SELECT  u.username, e.event_type, COUNT(*) as assignment_count, AVG(e.sender_transaction_amount) as avg_transaction_amount FROM  cm_event_assignee_update u JOIN event_store e ON u.ids[OFFSET(0)].identifier = e.lifecycle_id WHERE  u.username IN ('john.doe', 'jane.smith', 'robert.johnson') GROUP BY  u.username, e.event_type ORDER BY  u.username, assignment_count DESC;"]}